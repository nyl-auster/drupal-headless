<?php
/**
 * http://jsonapi.org/
 */

/**
 * Implements hook_menu
 */
function ionic_menu() {
  $items['api/users'] = array(
    'http methods' => array('GET', 'POST'),
    'access arguments' => array('access content'),
    'page callback'    => '%method_api_users',
  );
  $items['api/users/%'] = array(
    'http methods' => array('GET'),
    'access arguments' => array('access content'),
    'page arguments' => array(2),
    'page callback'    => '%method_api_users_detail',
  );
  $items['api/auth/login'] = array(
    'http methods' => array('POST'),
    'access arguments' => array('access content'),
    'page callback'    => '%method_api_auth_login',
  );
  return $items;
}

/**
 * @rest string name
 * @rest string password
 */
function POST_api_auth_login() {
  $datas = get_datas_from_json_post_request();
  if ($uid = user_authenticate($datas->name, $datas->password)) {
    $array = array('uid' => $uid);
    user_login_submit(array(), $array);
    user_login_finalize($login_array);
    return array(
      'errors' => array(),
      'messages' => t('User has been successfully login')
    );
  }

}

function GET_api_users() {

  $query = db_select('users', 'u');
  $query->addField('u', 'uid');
  $query->condition('status', 1);
  $users_datas = $query->execute()->fetchAll();

  $users = array();
  foreach ($users_datas as $i => $user_datas) {

    $user = user_load($user_datas->uid);
    $users[$i] = new stdClass();
    $users[$i]->id = $user->uid;
    $users[$i]->mail = $user->mail;
    $users[$i]->name = $user->name;
    if ($user->picture) {
      $users[$i]->picture = file_create_url($user->picture->uri);
    }
    else {
      $users[$i]->picture = '';
    }
  }

  return array(
    'data' => $users
  );
}

function POST_api_users() {

  $values = get_datas_from_json_post_request();

  $existing_user = user_load_by_name($values->name);
  if ($existing_user) {
    drupal_add_http_header('Status', 403);
    return array(
      "errors" => array('A user already exists with name ' . check_plain($values->name))
    );
  }

  $existing_user = user_load_by_mail($values->mail);
  if ($existing_user) {
    drupal_add_http_header('Status', 403);
    return array(
      "errors" => array('User already exists with email ' . check_plain($values->mail))
    );
  }

  $new_user = array(
    'name' => $values->name,
    'mail' => $values->mail,
    'init' => $values->mail,
    'pass' => user_password(),
    'status' => 1,
    'access' => REQUEST_TIME,
    'roles' => array(), // No other roles than Authenticated
    //'roles' => array('10' => '10', '11' => '11'), // If you want to specify additional roles, the numbers are role_id's
  );

  $user = user_save(NULL, $new_user);

  // send a mail to user so that it can confirm its email.
  _user_mail_notify('register_no_approval_required', $user);

  return array(
    'errors' => array(),
    'messages' => 'User created',
    'data' => $user,
  );

}

function GET_api_users_detail($uid) {
  $user = user_load($uid);
  if (!$user) {
    drupal_add_http_header('Status', 404);
    return array(
      'errors' => array('User not found'),
      'data' => array(),
    );
  }
  return array(
    'errors' => array(),
    'data' => array(
      'id' => check_plain($user->uid),
      'name' => check_plain($user->name),
      'mail' => check_plain($user->mail),
      'picture' => !empty($user->picture) ? file_create_url($user->picture->uri) : '',
    ),
  );
}